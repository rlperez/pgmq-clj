{:min-bb-version "0.8.156"
 :deps  {failjure/failjure {:mvn/version "2.3.0"}}
 :tasks {:requires ([babashka.fs :as fs]
                    [babashka.tasks :refer [shell]])

         run       {:doc  "starts the app"
                    :task (if (fs/windows?)
                            (clojure {:dir "."} "-M:dev")
                            (shell {:dir "."} "clj -M:dev"))
                    :override-builtin true}

         nrepl     {:doc  "starts the nREPL"
                    :task (clojure {:dir "."} "-M:dev:nrepl")}

         cider     {:doc  "starts the cider"
                    :task (clojure {:dir "."} "-M:dev:cider")}

         test      {:doc  "runs tests"
                    :task (let [args (:args (babashka.tasks/current-task))
                                profile (if (seq args) (first args) "test")
                                extra-opts (rest args)
                                cmd (str "bin/kaocha --profile " profile
                                         (when (seq extra-opts)
                                           (str " " (clojure.string/join " " extra-opts))))]
                            (println "Executing command:" cmd)
                            (shell {:dir "."} cmd))}

         uberjar   {:doc  "builds the uberjar with shadow-cljs output"
                    :task (do
                            (clojure {:dir "."} "-T:build all"))
                    :override-builtin true}

         upgrade   {:doc "updates dependencies for project"
                    :task (do
                            (clojure {:dir "."} "-M:outdated"))}

         format    {:doc  "Formats codebase"
                    :task (shell {:dir "src"} "cljfmt fix")}}}
