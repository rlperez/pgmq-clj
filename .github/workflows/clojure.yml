name: Clojure CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    if: github.actor != 'github-actions'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testcontainer:
          - quay.io/tembo/pg15-pgmq
          - quay.io/tembo/pg16-pgmq
          - quay.io/tembo/pg17-pgmq
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rlwrap
        run: |
          sudo apt install -y rlwrap
      - name: Install tool dependencies
        uses: jdx/mise-action@v2
      - name: Run tests
        if: ${{ matrix.testcontainer != 'quay.io/tembo/pg17-pgmq' }}
        env:
          TEST_CONTAINER: ${{ matrix.testcontainer }}
        run: |
          bb test
      - name: Run tests
        if: ${{ matrix.testcontainer == 'quay.io/tembo/pg17-pgmq' }}
        env:
          TEST_CONTAINER: ${{ matrix.testcontainer }}
        run: |
          bb test coverage
      - name: Upload coverage reports to Codecov
        if: ${{ matrix.testcontainer == 'quay.io/tembo/pg17-pgmq' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: rlperez/pgmq-clj
          files: target/coverage/codecov.json
      - name: Check if README.md was changed and commit if necessary
        if: github.ref != 'refs/heads/master' && matrix.testcontainer == 'quay.io/tembo/pg17-pgmq'
        run: |
          bb document
          echo "Checking for document changes..."
          git diff --exit-code --quiet README.md || (
            echo "Documentation was updated. Committing changes."
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"

            CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git checkout $CURRENT_BRANCH
            git remote set-url origin https://github-actions:${{ secrets.GIT_ACCESS_TOKEN }}@github.com/rlperez/pgmq-clj.git

            git add README.md
            git commit -m "docs: Automated update after README.md change"
            git push origin $CURRENT_BRANCH
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
